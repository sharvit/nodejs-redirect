[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/RedirectServer.js",
    "content": "import express from 'express';\nimport { createRedirectMiddleware } from './createRedirectMiddleware';\n\n/**\n * Express server that redirect all requests to a different URL\n */\nexport class RedirectServer {\n  /**\n   * Creates an instance of RedirectServer\n   * @param {string}  to            URl to redirect requests.\n   * @param {Boolean} [chain=false] Will chain the request path to the redirect url.\n   */\n  constructor(to, chain = false) {\n    /**\n     * URl to redirect requests.\n     * @type {string}\n     */\n    this.to = to;\n    /**\n     * Will chain the request path to the redirect url.\n     * @type {boolean}\n     */\n    this.chain = chain;\n\n    this._setupExpressServer();\n  }\n\n  /**\n   * Setup express server\n   */\n  _setupExpressServer() {\n    const { to, chain } = this;\n\n    /**\n     * Express server\n     * @type {Express}\n     */\n    this.expressServer = express();\n\n    // create the redirection middleware\n    const redirectionMiddleware = createRedirectMiddleware({ to, chain });\n\n    // setup the redirection middleware on all requests\n    this.expressServer.get('*', redirectionMiddleware);\n  }\n\n  /**\n   * Start the server on a port, start listening\n   * @param  {Number} port Port for running the server\n   */\n  listen(port) {\n    this.expressServer.listen(port);\n  }\n}\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/RedirectServer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "RedirectServer",
    "memberof": "src/RedirectServer.js",
    "static": true,
    "longname": "src/RedirectServer.js~RedirectServer",
    "access": "public",
    "export": true,
    "importPath": "nodejs-redirect/src/RedirectServer.js",
    "importStyle": "{RedirectServer}",
    "description": "Express server that redirect all requests to a different URL",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/RedirectServer.js~RedirectServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/RedirectServer.js~RedirectServer#constructor",
    "access": "public",
    "description": "Creates an instance of RedirectServer",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": "URl to redirect requests."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "chain",
        "description": "Will chain the request path to the redirect url."
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "to",
    "memberof": "src/RedirectServer.js~RedirectServer",
    "static": false,
    "longname": "src/RedirectServer.js~RedirectServer#to",
    "access": "public",
    "description": "URl to redirect requests.",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "chain",
    "memberof": "src/RedirectServer.js~RedirectServer",
    "static": false,
    "longname": "src/RedirectServer.js~RedirectServer#chain",
    "access": "public",
    "description": "Will chain the request path to the redirect url.",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "_setupExpressServer",
    "memberof": "src/RedirectServer.js~RedirectServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/RedirectServer.js~RedirectServer#_setupExpressServer",
    "access": "private",
    "description": "Setup express server",
    "lineNumber": 31,
    "ignore": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "expressServer",
    "memberof": "src/RedirectServer.js~RedirectServer",
    "static": false,
    "longname": "src/RedirectServer.js~RedirectServer#expressServer",
    "access": "public",
    "description": "Express server",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Express"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "listen",
    "memberof": "src/RedirectServer.js~RedirectServer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/RedirectServer.js~RedirectServer#listen",
    "access": "public",
    "description": "Start the server on a port, start listening",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "port",
        "description": "Port for running the server"
      }
    ],
    "return": null
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/RedirectServer.test.js",
    "content": "import express from 'express';\nimport { createRedirectMiddleware } from './createRedirectMiddleware';\n\nimport { RedirectServer } from './RedirectServer';\n\njest.mock('express');\njest.mock('./createRedirectMiddleware');\n\nconst expressInstance = {\n  get: jest.fn(),\n  listen: jest.fn(),\n};\n\nexpress.mockImplementation(() => expressInstance);\n\ndescribe('constructor', () => {\n  const testConstructor = (to, chain) => {\n    const server = new RedirectServer(to, chain);\n\n    expect(server.to).toBe(to);\n    expect(server.chain).toBe(chain || false);\n    expect(express).toHaveBeenCalled();\n    expect(createRedirectMiddleware).toHaveBeenCalledWith({\n      to,\n      chain: chain || false,\n    });\n    expect(expressInstance.get).toHaveBeenCalled();\n  };\n\n  afterEach(() => jest.clearAllMocks());\n\n  test('should create a server', () => testConstructor('to-somewhere'));\n\n  test('should create a server with chain', () =>\n    testConstructor('to-somewhere', true));\n});\n\ndescribe('listen', () => {\n  const port = 9999;\n\n  const server = new RedirectServer('to-somewhere');\n\n  server.listen(port);\n\n  expect(expressInstance.listen).toHaveBeenCalledWith(port);\n});\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/RedirectServer.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "expressInstance",
    "memberof": "src/RedirectServer.test.js",
    "static": true,
    "longname": "src/RedirectServer.test.js~expressInstance",
    "access": "public",
    "export": false,
    "importPath": "nodejs-redirect/src/RedirectServer.test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"get\": *, \"listen\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/createRedirectMiddleware.js",
    "content": "/**\n * Creates a redirection express middleware\n * @param  {Object}  options               Options object.\n * @param  {string}  options.to            URl to redirect requests\n * @param  {boolean} [options.chain=false] Will chain the request path to the redirect url.\n * @return {Function} Express middleware function\n */\nexport const createRedirectMiddleware = ({ to, chain = false }) => (\n  request,\n  response\n) => {\n  const redirectTo = chain ? `${to}${request.path}` : to;\n\n  response.redirect(redirectTo);\n};\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/createRedirectMiddleware.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "function",
    "name": "createRedirectMiddleware",
    "memberof": "src/createRedirectMiddleware.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/createRedirectMiddleware.js~createRedirectMiddleware",
    "access": "public",
    "export": true,
    "importPath": "nodejs-redirect/src/createRedirectMiddleware.js",
    "importStyle": "{createRedirectMiddleware}",
    "description": "Creates a redirection express middleware",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "options.to",
        "description": "URl to redirect requests"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.chain",
        "description": "Will chain the request path to the redirect url."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "Express middleware function"
    }
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/createRedirectMiddleware.test.js",
    "content": "import { createRedirectMiddleware } from './createRedirectMiddleware';\n\nconst testCreateRedirectMiddleware = (options, path, expectedRedirect) => {\n  const request = { path };\n  const response = { redirect: jest.fn() };\n\n  const middleware = createRedirectMiddleware(options);\n\n  middleware(request, response);\n\n  expect(response.redirect).toBeCalledWith(expectedRedirect);\n};\n\ntest('should create a middleware', () =>\n  testCreateRedirectMiddleware(\n    { to: 'to-somewhere' },\n    '/some-path',\n    'to-somewhere'\n  ));\n\ntest('should create a middleware with chain', () =>\n  testCreateRedirectMiddleware(\n    { to: 'to-somewhere', chain: true },\n    '/some-path',\n    'to-somewhere/some-path'\n  ));\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/createRedirectMiddleware.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "testCreateRedirectMiddleware",
    "memberof": "src/createRedirectMiddleware.test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/createRedirectMiddleware.test.js~testCreateRedirectMiddleware",
    "access": "public",
    "export": false,
    "importPath": "nodejs-redirect/src/createRedirectMiddleware.test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "expectedRedirect",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/index.js",
    "content": "export * from './RedirectServer';\nexport * from './createRedirectMiddleware';\nexport * from './startRedirectService';\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/startRedirectService.js",
    "content": "import { RedirectServer } from './RedirectServer';\n\n/**\n * Start a redirection service\n * @param  {Object}  options               Options object.\n * @param  {String}  options.to            URl to redirect requests.\n * @param  {Boolean} [options.chain=false] Will chain the request path to the redirect url.\n * @param  {Number}  [options.port=3000]   Port to run the service.\n */\nexport const startRedirectService = ({ to, chain = false, port = 3000 }) => {\n  // create the redirection server\n  const server = new RedirectServer(to, chain);\n\n  // run the server and start listen to the port\n  server.listen(port);\n\n  // Render some console log output\n  console.log('Redirection server listening on port: ' + port);\n  console.log('Redirecting all requests to: ' + to);\n  console.log('Chaining requests url is: ' + (chain ? 'on' : 'off'));\n};\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/startRedirectService.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "startRedirectService",
    "memberof": "src/startRedirectService.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/startRedirectService.js~startRedirectService",
    "access": "public",
    "export": true,
    "importPath": "nodejs-redirect/src/startRedirectService.js",
    "importStyle": "{startRedirectService}",
    "description": "Start a redirection service",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options object."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.to",
        "description": "URl to redirect requests."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.chain",
        "description": "Will chain the request path to the redirect url."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "3000",
        "defaultRaw": 3000,
        "name": "options.port",
        "description": "Port to run the service."
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/startRedirectService.test.js",
    "content": "import { RedirectServer } from './RedirectServer';\nimport { startRedirectService } from './startRedirectService';\n\njest.mock('./RedirectServer');\n\nconst testStartRedirectService = options => {\n  startRedirectService(options);\n\n  expect(RedirectServer).toHaveBeenCalledWith(\n    options.to,\n    options.chain || false\n  );\n  expect(RedirectServer.prototype.listen).toHaveBeenCalledWith(\n    options.port || 3000\n  );\n  expect(global.console.log.mock.calls).toMatchSnapshot();\n};\n\nbeforeEach(() => {\n  global.console = { log: jest.fn() };\n});\n\ntest('should start a redirect service', () =>\n  testStartRedirectService({ to: 'to-somewhere' }));\n\ntest('should start a redirect service with chain', () =>\n  testStartRedirectService({ to: 'to-somewhere', chain: true }));\ntest('should start a redirect service with custom port', () =>\n  testStartRedirectService({ to: 'to-somewhere', port: 4000 }));\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/startRedirectService.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "testStartRedirectService",
    "memberof": "src/startRedirectService.test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/startRedirectService.test.js~testStartRedirectService",
    "access": "public",
    "export": false,
    "importPath": "nodejs-redirect/src/startRedirectService.test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "kind": "index",
    "content": "# nodejs-redirect\n\n> Simple redirect service\n\n[![Package Version](https://img.shields.io/npm/v/nodejs-redirect.svg?style=flat-square)](https://www.npmjs.com/package/nodejs-redirect)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n[![Downloads Status](https://img.shields.io/npm/dm/nodejs-redirect.svg?style=flat-square)](https://npm-stat.com/charts.html?package=nodejs-redirect&from=2016-04-01)\n[![Build Status: Linux](https://img.shields.io/travis/sharvit/nodejs-redirect/master.svg?style=flat-square)](https://travis-ci.org/sharvit/nodejs-redirect)\n[![Coverage Status](https://coveralls.io/repos/github/sharvit/nodejs-redirect/badge.svg?branch=master)](https://coveralls.io/github/sharvit/nodejs-redirect?branch=master)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n[![dependencies Status](https://david-dm.org/sharvit/nodejs-redirect/status.svg)](https://david-dm.org/sharvit/nodejs-redirect)\n[![devDependencies Status](https://david-dm.org/sharvit/nodejs-redirect/dev-status.svg)](https://david-dm.org/sharvit/nodejs-redirect?type=dev)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n[![MIT License](https://img.shields.io/npm/l/stack-overflow-copy-paste.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n\n## Option 1 - Install from `npm` and run the redirection service\n\nFirst, install `nodejs-redirect` using `npm` or `yarn`\n\n```sh\nnpm install --global nodejs-redirect\n# or using yarn\nyarn global add nodejs-redirect\n```\n\nRun `nodejs-redirect` and set your environment variables:\n\n```\nREDIRECTION_URL=https://google.com nodejs-redirect\n```\n\n## Option 2 - Install from source as an application\n\nFirst, clone the project from github and install the node modules:\n\n```sh\ngit clone https://github.com/sharvit/nodejs-redirect.git\ncd nodejs-redirect\nyarn\n```\n\nRun `npm start` and set your environment variables:\n\n```\nREDIRECTION_URL=https://google.com npm start\n```\n\n### Available environment variables\n\n| Variable          | Description                                      | Default Value      |\n| ----------------- | ------------------------------------------------ | ------------------ |\n| REDIRECTION_URL   | URl to redirect requests                         | https://google.com |\n| CHAIN_REQUEST_URL | Will chain the request path to the redirect url. | false              |\n| PORT              | Port to run the service                          | 3000               |\n\n## Option 3 - Use as a library\n\n```js\nimport { RedirectServer } from 'nodejs-redirect';\n\nconst to = 'https://google.com';\nconst chain = true;\nconst port = 3000;\n\n// create the redirection server\nconst server = new RedirectServer(to, chain);\n\n// start listening\nserver.listen(port);\n\n// Render some console log output\nconsole.log('Redirection server listening on port: ' + port);\nconsole.log('Redirecting all requests to: ' + to);\nconsole.log('Chaining requests url is: ' + (chain ? 'on' : 'off'));\n```\n\n# Option 4 - Use as an express middleware\n\n```js\nimport express from 'express';\nimport { createRedirectMiddleware } from 'nodejs-redirect'\n\nconst to = 'https://google.com';\nconst chain = true;\nconst port = 3000;\n\n// create an express server\nconst server = express();\n\n// create the redirection middleware\nconst redirectionMiddleware = createRedirectMiddleware({ to, chain });\n\n// setup the redirection middleware on all requests\nserver.get('*', redirectionMiddleware);\n\n// start listening\nserver.listen(port);\n\n// Render some console log output\nconsole.log('Redirection server listening on port: ' + port);\nconsole.log('Redirecting all requests to: ' + to);\nconsole.log('Chaining requests url is: ' + (chain ? 'on' : 'off'));\n```\n\n\n## License\n\nMIT &copy; [Avi Sharvit](https://sharvit.github.io)\n",
    "longname": "/home/travis/build/sharvit/nodejs-redirect/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"nodejs-redirect\",\n  \"version\": \"0.0.0-semantic-release\",\n  \"description\": \"Simple redirect service\",\n  \"license\": \"MIT\",\n  \"repository\": \"https://github.com/sharvit/nodejs-redirect\",\n  \"author\": {\n    \"name\": \"Avi Sharvit\",\n    \"email\": \"sharvita@gmail.com\",\n    \"url\": \"https://sharvit.github.io\"\n  },\n  \"engines\": {\n    \"node\": \">=8\"\n  },\n  \"scripts\": {\n    \"start\": \"./bin/nodejs-redirect.js\",\n    \"prebuild\": \"rimraf dist\",\n    \"build\": \"yarn webpack:build && yarn docs:build\",\n    \"webpack:build\": \"webpack --mode production --config ./config/webpack.config.js\",\n    \"webpack:develop\": \"webpack --mode development --watch --watch-poll --config ./config/webpack.config.js\",\n    \"docs:build\": \"esdoc -c ./config/esdoc.config.js\",\n    \"docs:develop\": \"watch \\\"yarn docs:build\\\" . --ignoreDirectoryPattern='/node_modules|docs|dist|coverage|.git|.nyc*./'\",\n    \"test:watch\": \"jest --config ./config/jest.config.js --watch\",\n    \"test\": \"jest --config ./config/jest.config.js --coverage\",\n    \"coveralls\": \"cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\n    \"lint\": \"eslint ./src\",\n    \"lint:commit\": \"commitlint -e --config ./commitlint.config.js\",\n    \"lint:commit-travis\": \"commitlint-travis --config ./commitlint.config.js\",\n    \"commit\": \"git-cz\",\n    \"semantic-release\": \"semantic-release\"\n  },\n  \"bin\": \"bin/nodejs-redirect.js\",\n  \"main\": \"dist/index.js\",\n  \"files\": [\n    \"dist\",\n    \"bin\"\n  ],\n  \"dependencies\": {\n    \"express\": \"^4.14.0\",\n    \"newrelic\": \"^1.29.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.5.0\",\n    \"@babel/preset-env\": \"^7.5.0\",\n    \"@commitlint/cli\": \"^8.1.0\",\n    \"@commitlint/config-conventional\": \"^8.1.0\",\n    \"@commitlint/travis-cli\": \"^8.1.0\",\n    \"babel-eslint\": \"^10.0.1\",\n    \"babel-jest\": \"^24.8.0\",\n    \"babel-loader\": \"^8.0.6\",\n    \"babel-plugin-add-module-exports\": \"^1.0.0\",\n    \"commitlint-config-cz\": \"^0.12.0\",\n    \"coveralls\": \"^3.0.2\",\n    \"cz-conventional-changelog\": \"^3.0.2\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^6.1.0\",\n    \"eslint-config-prettier\": \"^6.0.0\",\n    \"eslint-config-standard\": \"^13.0.1\",\n    \"eslint-plugin-import\": \"^2.14.0\",\n    \"eslint-plugin-node\": \"^9.1.0\",\n    \"eslint-plugin-prettier\": \"^3.0.0\",\n    \"eslint-plugin-promise\": \"^4.0.1\",\n    \"eslint-plugin-standard\": \"^4.0.0\",\n    \"jest\": \"^24.8.0\",\n    \"prettier\": \"^1.15.3\",\n    \"rimraf\": \"^3.0.0\",\n    \"semantic-release\": \"^15.13.1\",\n    \"webpack\": \"^4.41.4\",\n    \"webpack-cli\": \"^3.3.10\"\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"./node_modules/cz-conventional-changelog\"\n    }\n  },\n  \"keywords\": [\n    \"redirect\"\n  ]\n}\n",
    "longname": "/home/travis/build/sharvit/nodejs-redirect/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# nodejs-redirect\n\n> Simple redirect service\n\n[![Package Version](https://img.shields.io/npm/v/nodejs-redirect.svg?style=flat-square)](https://www.npmjs.com/package/nodejs-redirect)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n[![Downloads Status](https://img.shields.io/npm/dm/nodejs-redirect.svg?style=flat-square)](https://npm-stat.com/charts.html?package=nodejs-redirect&from=2016-04-01)\n[![Build Status: Linux](https://img.shields.io/travis/sharvit/nodejs-redirect/master.svg?style=flat-square)](https://travis-ci.org/sharvit/nodejs-redirect)\n[![Coverage Status](https://coveralls.io/repos/github/sharvit/nodejs-redirect/badge.svg?branch=master)](https://coveralls.io/github/sharvit/nodejs-redirect?branch=master)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)\n[![dependencies Status](https://david-dm.org/sharvit/nodejs-redirect/status.svg)](https://david-dm.org/sharvit/nodejs-redirect)\n[![devDependencies Status](https://david-dm.org/sharvit/nodejs-redirect/dev-status.svg)](https://david-dm.org/sharvit/nodejs-redirect?type=dev)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n[![MIT License](https://img.shields.io/npm/l/stack-overflow-copy-paste.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n\n[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy)\n\n## Option 1 - Install from `npm` and run the redirection service\n\nFirst, install `nodejs-redirect` using `npm` or `yarn`\n\n```sh\nnpm install --global nodejs-redirect\n# or using yarn\nyarn global add nodejs-redirect\n```\n\nRun `nodejs-redirect` and set your environment variables:\n\n```\nREDIRECTION_URL=https://google.com nodejs-redirect\n```\n\n## Option 2 - Install from source as an application\n\nFirst, clone the project from github and install the node modules:\n\n```sh\ngit clone https://github.com/sharvit/nodejs-redirect.git\ncd nodejs-redirect\nyarn\n```\n\nRun `npm start` and set your environment variables:\n\n```\nREDIRECTION_URL=https://google.com npm start\n```\n\n### Available environment variables\n\n| Variable          | Description                                      | Default Value      |\n| ----------------- | ------------------------------------------------ | ------------------ |\n| REDIRECTION_URL   | URl to redirect requests                         | https://google.com |\n| CHAIN_REQUEST_URL | Will chain the request path to the redirect url. | false              |\n| PORT              | Port to run the service                          | 3000               |\n\n## Option 3 - Use as a library\n\n```js\nimport { RedirectServer } from 'nodejs-redirect';\n\nconst to = 'https://google.com';\nconst chain = true;\nconst port = 3000;\n\n// create the redirection server\nconst server = new RedirectServer(to, chain);\n\n// start listening\nserver.listen(port);\n\n// Render some console log output\nconsole.log('Redirection server listening on port: ' + port);\nconsole.log('Redirecting all requests to: ' + to);\nconsole.log('Chaining requests url is: ' + (chain ? 'on' : 'off'));\n```\n\n# Option 4 - Use as an express middleware\n\n```js\nimport express from 'express';\nimport { createRedirectMiddleware } from 'nodejs-redirect'\n\nconst to = 'https://google.com';\nconst chain = true;\nconst port = 3000;\n\n// create an express server\nconst server = express();\n\n// create the redirection middleware\nconst redirectionMiddleware = createRedirectMiddleware({ to, chain });\n\n// setup the redirection middleware on all requests\nserver.get('*', redirectionMiddleware);\n\n// start listening\nserver.listen(port);\n\n// Render some console log output\nconsole.log('Redirection server listening on port: ' + port);\nconsole.log('Redirecting all requests to: ' + to);\nconsole.log('Chaining requests url is: ' + (chain ? 'on' : 'off'));\n```\n\n\n## License\n\nMIT &copy; [Avi Sharvit](https://sharvit.github.io)\n",
    "longname": "/home/travis/build/sharvit/nodejs-redirect/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/travis/build/sharvit/nodejs-redirect/other/examples.md",
    "name": "./other/examples.md",
    "content": "# Examples\n\nThere aren‘t any examples yet! Want to add one? See [`contributing.md`](../contributing.md)\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/travis/build/sharvit/nodejs-redirect/contributing.md",
    "name": "./contributing.md",
    "content": "# Contributing\n\nContributions are always welcome, no matter how large or small.\n\n**Working on your first Pull Request?** You can learn how from this _free_ series [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github)\n\n## Code of Conduct\n\nBy participating, you are expected to uphold this [Contributor Covenant Code of Conduct](./other/code_of_conduct.md). Please report unacceptable behavior to [sharvita@gmail.com](mailto:sharvita@gmail.com).\n\n## Project setup\n\nFirst, [fork](https://guides.github.com/activities/forking) then clone the repo:\n\n```sh\ngit clone https://github.com/your-username/nodejs-redirect\ncd nodejs-redirect\ngit remote add upstream https://github.com/sharvit/nodejs-redirect\n```\n\nInstall dependencies:\n\n```sh\nyarn\n```\n\nRun test suits to validate the project is working:\n\n```sh\nyarn test\n# run test in watch mode\nyarn test:watch\n```\n\nBuild the project:\n\n```sh\nyarn build\n# only build the dist folder from source\nyarn webpack:build\n# build webpack with a development mode and watch files\nyarn webpack:develop\n# only build the docs using esdocs\nyarn docs:build\n# build docs in watch mode\nyarn docs:develop\n```\n\nRun linter to validate the project code:\n\n```sh\nyarn lint\n# to fix linting errors\nyarn lint --fix\n```\n\n\nRun linter to validate your commit message:\n\n```sh\nyarn lint:commit\n```\n\n\n## Committing and Pushing changes\n\nCreate a branch and start hacking:\n\n```sh\ngit checkout -b my-branch\n```\n\nCommit and push your changes:\n\n`generator-node-mdl` uses [commitizen](https://github.com/commitizen/cz-cli) to create commit messages so [semantic-release](https://github.com/semantic-release/semantic-release) can automatically create releases.\n\n```sh\ngit add .\n\nyarn commit\n# answer the questions\n\ngit push origin my-branch\n```\n\nOpen this project on [GitHub](https://github.com/sharvit/nodejs-redirect), then click “Compare & pull request”.\n\n## Help needed\n\nPlease checkout the [`roadmap.md`](./other/roadmap.md) and the open issues.\n\nAlso, please watch the repo and respond to questions/bug reports/feature requests, Thanks!\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/travis/build/sharvit/nodejs-redirect/other/code_of_conduct.md",
    "name": "./other/code_of_conduct.md",
    "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others‘ private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [sharvita@gmail.com](mailto:sharvita@gmail.com). All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project‘s leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/travis/build/sharvit/nodejs-redirect/other/roadmap.md",
    "name": "./other/roadmap.md",
    "content": "# Project Roadmap\n\nThis is where we‘ll define a few things about the library‘s goals.\n\nWe haven‘t filled this out yet though. Care to help? See [`contributing.md`](../contributing.md)\n\n## Want to do\n\n## Might do\n\n## Won‘t do\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 67,
    "kind": "testFile",
    "name": "src/RedirectServer.test.js",
    "content": "import express from 'express';\nimport { createRedirectMiddleware } from './createRedirectMiddleware';\n\nimport { RedirectServer } from './RedirectServer';\n\njest.mock('express');\njest.mock('./createRedirectMiddleware');\n\nconst expressInstance = {\n  get: jest.fn(),\n  listen: jest.fn(),\n};\n\nexpress.mockImplementation(() => expressInstance);\n\ndescribe('constructor', () => {\n  const testConstructor = (to, chain) => {\n    const server = new RedirectServer(to, chain);\n\n    expect(server.to).toBe(to);\n    expect(server.chain).toBe(chain || false);\n    expect(express).toHaveBeenCalled();\n    expect(createRedirectMiddleware).toHaveBeenCalledWith({\n      to,\n      chain: chain || false,\n    });\n    expect(expressInstance.get).toHaveBeenCalled();\n  };\n\n  afterEach(() => jest.clearAllMocks());\n\n  test('should create a server', () => testConstructor('to-somewhere'));\n\n  test('should create a server with chain', () =>\n    testConstructor('to-somewhere', true));\n});\n\ndescribe('listen', () => {\n  const port = 9999;\n\n  const server = new RedirectServer('to-somewhere');\n\n  server.listen(port);\n\n  expect(expressInstance.listen).toHaveBeenCalledWith(port);\n});\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/RedirectServer.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "src/RedirectServer.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/RedirectServer.test.js~describe0",
    "access": null,
    "description": "constructor",
    "lineNumber": 16
  },
  {
    "__docId__": 69,
    "kind": "test",
    "name": "test1",
    "testId": 1,
    "memberof": "src/RedirectServer.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "src/RedirectServer.test.js~describe0.test1",
    "access": null,
    "description": "should create a server",
    "lineNumber": 32
  },
  {
    "__docId__": 70,
    "kind": "test",
    "name": "test2",
    "testId": 2,
    "memberof": "src/RedirectServer.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "src/RedirectServer.test.js~describe0.test2",
    "access": null,
    "description": "should create a server with chain",
    "lineNumber": 34
  },
  {
    "__docId__": 71,
    "kind": "test",
    "name": "describe3",
    "testId": 3,
    "memberof": "src/RedirectServer.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/RedirectServer.test.js~describe3",
    "access": null,
    "description": "listen",
    "lineNumber": 38
  },
  {
    "__docId__": 72,
    "kind": "testFile",
    "name": "src/createRedirectMiddleware.test.js",
    "content": "import { createRedirectMiddleware } from './createRedirectMiddleware';\n\nconst testCreateRedirectMiddleware = (options, path, expectedRedirect) => {\n  const request = { path };\n  const response = { redirect: jest.fn() };\n\n  const middleware = createRedirectMiddleware(options);\n\n  middleware(request, response);\n\n  expect(response.redirect).toBeCalledWith(expectedRedirect);\n};\n\ntest('should create a middleware', () =>\n  testCreateRedirectMiddleware(\n    { to: 'to-somewhere' },\n    '/some-path',\n    'to-somewhere'\n  ));\n\ntest('should create a middleware with chain', () =>\n  testCreateRedirectMiddleware(\n    { to: 'to-somewhere', chain: true },\n    '/some-path',\n    'to-somewhere/some-path'\n  ));\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/createRedirectMiddleware.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "test",
    "name": "test4",
    "testId": 4,
    "memberof": "src/createRedirectMiddleware.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/createRedirectMiddleware.test.js~test4",
    "access": null,
    "description": "should create a middleware",
    "lineNumber": 14
  },
  {
    "__docId__": 74,
    "kind": "test",
    "name": "test5",
    "testId": 5,
    "memberof": "src/createRedirectMiddleware.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/createRedirectMiddleware.test.js~test5",
    "access": null,
    "description": "should create a middleware with chain",
    "lineNumber": 21
  },
  {
    "__docId__": 75,
    "kind": "testFile",
    "name": "src/startRedirectService.test.js",
    "content": "import { RedirectServer } from './RedirectServer';\nimport { startRedirectService } from './startRedirectService';\n\njest.mock('./RedirectServer');\n\nconst testStartRedirectService = options => {\n  startRedirectService(options);\n\n  expect(RedirectServer).toHaveBeenCalledWith(\n    options.to,\n    options.chain || false\n  );\n  expect(RedirectServer.prototype.listen).toHaveBeenCalledWith(\n    options.port || 3000\n  );\n  expect(global.console.log.mock.calls).toMatchSnapshot();\n};\n\nbeforeEach(() => {\n  global.console = { log: jest.fn() };\n});\n\ntest('should start a redirect service', () =>\n  testStartRedirectService({ to: 'to-somewhere' }));\n\ntest('should start a redirect service with chain', () =>\n  testStartRedirectService({ to: 'to-somewhere', chain: true }));\ntest('should start a redirect service with custom port', () =>\n  testStartRedirectService({ to: 'to-somewhere', port: 4000 }));\n",
    "static": true,
    "longname": "/home/travis/build/sharvit/nodejs-redirect/src/startRedirectService.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "test",
    "name": "test6",
    "testId": 6,
    "memberof": "src/startRedirectService.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/startRedirectService.test.js~test6",
    "access": null,
    "description": "should start a redirect service",
    "lineNumber": 23
  },
  {
    "__docId__": 77,
    "kind": "test",
    "name": "test7",
    "testId": 7,
    "memberof": "src/startRedirectService.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/startRedirectService.test.js~test7",
    "access": null,
    "description": "should start a redirect service with chain",
    "lineNumber": 26
  },
  {
    "__docId__": 78,
    "kind": "test",
    "name": "test8",
    "testId": 8,
    "memberof": "src/startRedirectService.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "src/startRedirectService.test.js~test8",
    "access": null,
    "description": "should start a redirect service with custom port",
    "lineNumber": 28
  }
]